rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }
    
    match /properties/{propertyId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.ownerId || 
        request.auth.uid in resource.data.authorizedUsers
      );
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if request.auth.uid == resource.data.ownerId;
    }

    match /projects/{projectId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.involvedUsers;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
      allow update: if request.auth != null && request.auth.uid in resource.data.involvedUsers;

      // UPDATED for the chat system
      match /messages/{messageId} {
        allow read, create: if exists(/databases/$(database)/documents/projects/$(projectId)) &&
                            request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.involvedUsers;
      }
    }
    
    match /timberSales/{saleId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && (
          request.auth.uid == get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.ownerId ||
          request.auth.uid == get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.foresterId
      );
    }

    match /quotes/{quoteId} {
        allow read: if request.auth != null && (
          request.auth.uid == resource.data.landownerId ||
          request.auth.uid == resource.data.professionalId
        );
        allow create: if request.auth != null && request.auth.uid == request.resource.data.professionalId;
    }

    match /bids/{bidId} {
        allow read: if request.auth != null && (
          request.auth.uid == resource.data.landownerId ||
          request.auth.uid == resource.data.bidderId
        );
        allow create: if request.auth != null && request.auth.uid == request.resource.data.bidderId;
    }
    
    match /inquiries/{inquiryId} {
        allow read, write: if request.auth != null && (
          request.auth.uid in resource.data.involvedUsers || 
          request.auth.uid in request.resource.data.involvedUsers
        );
    }

    match /haulTickets/{ticketId} {
      allow create: if request.auth != null
        && request.resource.data.submitterId == request.auth.uid
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['logging-contractor', 'timber-buyer'];
            
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.submitterId ||
        request.auth.uid == resource.data.ownerId ||
        request.auth.uid == resource.data.supplierId
      );
      
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.supplierId
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'timber-buyer';
    }

    match /activity/{activityId} {
        allow read: if request.auth != null && request.auth.uid in resource.data.involvedUsers;
        // Writes are handled server-side by cloud functions and trusted client logic
        allow write: if request.auth != null;
    }
  }
}